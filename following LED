
#define MOT_A1_PIN 5
#define MOT_A2_PIN 6
#define MOT_B1_PIN 9
#define MOT_B2_PIN 10
#define uart 9600
#define sensorNUM 1023
#define time 500
int sensDiffThresh = 50;
int SensorLeft = 0;
int SensorRight = 0;

int LeftSensor = A1;
int RightSensor = A2; 
const int slowSpeed = 50;
const int maxSpeed = 250; 


int SensorDifference = 0; 
int error = 40;

int leftServoSpeed = 0;
int rightServoSpeed = 0;


void setup(void)
{
 
  pinMode(MOT_A1_PIN, OUTPUT);
  pinMode(MOT_A2_PIN, OUTPUT);
  pinMode(MOT_B1_PIN, OUTPUT);
  pinMode(MOT_B2_PIN, OUTPUT);

 
  digitalWrite(MOT_A1_PIN, LOW);
  digitalWrite(MOT_A2_PIN, LOW);
  digitalWrite(MOT_B1_PIN, LOW);
  digitalWrite(MOT_B2_PIN, LOW);

 
  Serial.begin(uart);
}

/// \param pwm    
/// \param IN1_PIN  
/// \param IN2_PIN  

void set_motor_pwm(int pwm, int IN1_PIN, int IN2_PIN)
{
  if (pwm < 0) {  
    analogWrite(IN1_PIN, -pwm);
    digitalWrite(IN2_PIN, LOW);

  } else { 
    digitalWrite(IN1_PIN, LOW);
    analogWrite(IN2_PIN, pwm);
  }
}

/// \param pwm_A  
/// \param pwm_B 

void set_motor_currents(int pwm_A, int pwm_B)
{
  set_motor_pwm(pwm_A, MOT_A1_PIN, MOT_A2_PIN);
  set_motor_pwm(pwm_B, MOT_B1_PIN, MOT_B2_PIN);

  
  Serial.print("Set motor A PWM = ");
  Serial.print(pwm_A);
  Serial.print(" motor B PWM = ");
  Serial.println(pwm_B);
}


 /// \param pwm_A  
 /// \param pwm_B 
 /// \param duration 
void spin_and_wait(int pwm_A, int pwm_B, int duration)
{
  set_motor_currents(pwm_A, pwm_B);
  delay(duration);
}

void loop()
{
 boolean reverse = 0;
SensorLeft = sensorNUM - analogRead(LeftSensor); 

delay(1); 
SensorRight = sensorNUM - analogRead(RightSensor); 

delay(1); 

SensorDifference = abs(SensorLeft - SensorRight);
if (SensorLeft > SensorRight && SensorDifference > sensDiffThresh) { 
leftServoSpeed = slowSpeed; 
rightServoSpeed = maxSpeed; 
}

if (SensorLeft < SensorRight && SensorDifference > sensDiffThresh) { 
leftServoSpeed = maxSpeed; 
rightServoSpeed = slowSpeed; 
}

else if (SensorDifference < sensDiffThresh) { 
leftServoSpeed = maxSpeed; 
rightServoSpeed = maxSpeed; 
}

  spin_and_wait(leftServoSpeed,rightServoSpeed,time); 
}
